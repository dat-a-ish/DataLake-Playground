version: "3"

services:
  catalog:
    image: projectnessie/nessie
    container_name: catalog
    networks:
      data-lake-network:
    ports:
      - 19120:19120

  trino:
    image: trinodb/trino
    container_name: trino
    networks:
      data-lake-network:
    ports:
      - 8080:8080
    volumes:
      - "./trino/trino_connections/iceberg_datalake.properties:/etc/trino/catalog/iceberg_datalake.properties"
      - "./trino/trino_connections/postgres.properties:/etc/trino/catalog/postgres.properties"
      - "./trino/trino_connections/http.properties:/etc/trino/catalog/http.properties"
      - "./trino/trino_connections/local_http.properties:/etc/trino/catalog/local_http.properties"
      - "./trino/coordinator-config.properties:/etc/trino/config.properties"

  trino-worker:
    image: trinodb/trino
    networks:
      data-lake-network:
    volumes:
      - "./trino/trino_connections/iceberg_datalake.properties:/etc/trino/catalog/iceberg_datalake.properties"
      - "./trino/trino_connections/postgres.properties:/etc/trino/catalog/postgres.properties"
      - "./trino/trino_connections/http.properties:/etc/trino/catalog/http.properties"
      - "./trino/trino_connections/local_http.properties:/etc/trino/catalog/local_http.properties"
      - "./trino/worker-1/worker-config.properties:/etc/trino/config.properties"

  storage:
    image: minio/minio
    container_name: storage
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=storage
      - MINIO_REGION_NAME=us-east-1
      - MINIO_REGION=us-east-1
    networks:
      data-lake-network:
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]

  cloudbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: cloudbeaver
    ports:
      - "8089:8978"
    networks:
      data-lake-network:
    environment:
      - CB_SERVER_NAME=CloudBeaver CE Server
      - CB_SERVER_URL=http://localhost:8089
      - CB_ADMIN_NAME=TestTest123
      - CB_ADMIN_PASSWORD=TestTest123
    restart: unless-stopped
    volumes:
      - "./dbeaver_conf/initial-data-sources.conf:/opt/cloudbeaver/conf/initial-data-sources.conf"
      - "./dbeaver_conf/queries:/opt/cloudbeaver/workspace/GlobalConfiguration/"


  mc:
    depends_on:
      - storage
      - catalog
    image: minio/mc
    container_name: mc
    networks:
      data-lake-network:
        aliases:
          - minio.storage
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://storage:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc mb minio/iceberg;
      /usr/bin/mc policy set public minio/warehouse;
      /usr/bin/mc policy set public minio/iceberg;
      tail -f /dev/null
      "

  spark:
    image: bitnami/spark:3.5.1
    container_name: spark
    networks:
      data-lake-network:
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
    ports:
      - "4040:4040"
      - "8085:8080"
      - "7077:7077"
      - "10000:10000"

  spark-worker:
    image: bitnami/spark:3.5.1
    container_name: spark-worker
    networks:
      data-lake-network:
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
    depends_on:
      - spark

  jupyter:
    build:
      context: .
      dockerfile: jupyter/Dockerfile
    networks:
      data-lake-network:
    ports:
      - "8888:8888"
    volumes:
      - ./jupyter/notebooks:/home/jovyan/work
    environment:
      - JUPYTER_TOKEN=TestTest123
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
    command: start-notebook.sh --NotebookApp.token=${JUPYTER_TOKEN}

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    networks:
      data-lake-network:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

networks:
  data-lake-network: 
